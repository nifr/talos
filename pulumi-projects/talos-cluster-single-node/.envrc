PATH_add node_modules/.bin
PATH_add ./bin

## tip create git related secrets at once:
##   touch .devcontainer/.secrets/GIT_CONFIG_{KEY,VALUE}_{0..3}
##   echo '4' > .devcontainer/.secrets/GIT_CONFIG_COUNT
##
declare -ra environmentVariablesToLoadFromSecrets=(
  'PULUMI_ACCESS_TOKEN'
  'HCLOUD_TOKEN'
  'GH_TOKEN'
  'GIT_AUTHOR_NAME'
  'GIT_AUTHOR_EMAIL'
  'GIT_COMMITTER_NAME'
  'GIT_COMMITTER_EMAIL'
  'GIT_CONFIG_COUNT'
  'GIT_CONFIG_KEY_0'
  'GIT_CONFIG_VALUE_0'
  'GIT_CONFIG_KEY_1'
  'GIT_CONFIG_VALUE_1'
  'GIT_CONFIG_KEY_2'
  'GIT_CONFIG_VALUE_2'
  'GIT_CONFIG_KEY_3'
  'GIT_CONFIG_VALUE_3'
  'ATUIN_USERNAME'
  'ATUIN_PASSWORD'
  'ATUIN_KEY'
  'CLOUDFLARE_ACCOUNT_ID'
  'CLOUDFLARE_EMAIL'
  'CLOUDFLARE_API_TOKEN'
  'CLOUDFLARE_DNS_API_TOKEN'
)

for environmentVariable in "${environmentVariablesToLoadFromSecrets[@]}"; do
  if [ ! -r '/.dockerenv' ]; then
    # only load from secrets when running in a container
    continue
  fi

  if [ -n "${!environmentVariable:-}" ]; then
    # skip loading if the environment variable is already set
    printf "${DIRENV_LOG_FORMAT:-direnv: %s}\n" "skip ${environmentVariable} (already set)"
    continue
  fi

  if [ -r "/run/secrets/${environmentVariable}" ]; then
    export "${environmentVariable}=$(cat /run/secrets/${environmentVariable})"
  fi
  watch_file "/run/secrets/${environmentVariable}"
done

if [ -r ./kubeconfig ]; then
  export KUBECONFIG="$(realpath ./kubeconfig)"
fi
watch_file kubeconfig

if [ -r ./talosconfig ]; then
  export TALOSCONFIG="$(realpath ./talosconfig)"
fi
watch_file talosconfig
