name: Pulumi Test
on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read


# env:
#   ESC_ACTION_ENVIRONMENT: galawork/aws/staging
#   ESC_ACTION_EXPORT_ENVIRONMENT_VARIABLES: AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_SESSION_TOKEN
#   ESC_ACTION_OIDC_AUTH: 'true'
#   ESC_ACTION_OIDC_ORGANIZATION: 'galawork-nfroehlich'
#   ESC_ACTION_OIDC_REQUESTED_TOKEN_TYPE: urn:pulumi:token-type:access_token:personal

jobs:
  test_aws_connection:
    runs-on: ubuntu-latest

    steps:

      - uses: pulumi/auth-actions@v1
        ## see: https://github.com/marketplace/actions/pulumi-auth-action
        ## see: https://app.pulumi.com/galawork-nfroehlich/oidc-issuers
        with:
          ## organization is the pulumi organization name
          organization: galawork-nfroehlich
          ## requested-token-type can be one of:
          ## - urn:pulumi:token-type:access_token:personal (default)
          ## - urn:pulumi:token-type:access_token:team
          ## - urn:pulumi:token-type:access_token:organization
          requested-token-type: urn:pulumi:token-type:access_token:personal
          ## scope can be one of:
          ## - user:<pulumi-username> (for personal tokens)
          ## - team:<pulumi-organization>/<pulumi-team-name> (for team tokens)
          ## - organization:admin (for organization tokens)
          scope: 'user:galawork-nfroehlich'
          ## token expiration in seconds
          token-expiration: 300
          ## export-environment-variables=true means PULUMI_ACCESS_TOKEN will be set in the GitHub workflow environment
          export-environment-variables: true

      - name: Install and inject Galawork AWS ESC environment variables
        uses: pulumi/esc-action@v1
        with:
          environment: 'galawork/aws/staging'

      - name: Get environment variables from 1Password
        run: echo _PULUMI_ESC_INTEGRATION_1PASSWORD_ENABLED=${_PULUMI_ESC_INTEGRATION_1PASSWORD_ENABLED:-false}'

      - name: Get AWS Identity
        run: aws sts get-caller-identity

      - name: Install and inject personal Shell ESC environment variables
        uses: pulumi/esc-action@v1
        with:
          environment: 'galawork-nfroehlich/onepassword/shell'

      - name: Get environment variables from 1Password
        run: echo _PULUMI_ESC_INTEGRATION_1PASSWORD_ENABLED=${_PULUMI_ESC_INTEGRATION_1PASSWORD_ENABLED:-false}'

      - name: Install and inject AWS RDS environmment variables from AWS Secrets Manager
        uses: pulumi/esc-action@v1
        with:
          environment: 'galawork/aws-rds/staging'

      - name: Get environment variable from AWS Secrets Manager
        run: 'echo _PULUMI_ESC_INTEGRATION_AWS_SECRETS_MANAGER_ENABLED=${_PULUMI_ESC_INTEGRATION_AWS_SECRETS_MANAGER_ENABLED:-false}'
